{
  "styledComponentWrapper": {
    "prefix": "scw",
    "body": [
      "import styled from \"styled-components\";",
      "",
      "export const ${TM_FILENAME}Wrapper = styled.div`",
      "`"
    ]
  },
  "fastArrowFunction": {
    "prefix": "fa",
    "body": [
      "() => $1"
    ]
  },
  "LogEffect": {
    "prefix": "ceff",
    "body": [
      "useEffect(() => {console.log(${1:example})}, [${1:example}])"
    ],
    "description": "LogEffect"
  },
  "AsynchronousAnonymousSelfCallingFunction": {
    "prefix": "aascf",
    "body": [
      "(async () => {",
      "  ${1}",
      "})()"
    ],
    "description": "LogEffect"
  },
  "useQuery": {
    "prefix": "useQuerySnippet",
    "body": [
      "const { data: $1 } = useQuery({",
      "  queryKey: [],",
      "  queryFn: () =>",
      "});"
    ],
    "description": "useQuery"
  },
  "useCase": {
    "prefix": "useCaseSnippet",
    "body": [
      "import { Injectable } from '@nestjs/common';",
      "",
      "@Injectable()",
      "export class ${1:$(pascalcaseFilename)}UseCase {",
      "  constructor(private readonly ${2:$(camelcaseSubject)}Repository: ${3:$(pascalcaseSubject)}Repository) {}",
      "",
      "  async execute() {",
      "    ",
      "  }",
      "}"
    ],
    "description": "NestJS use case boilerplate"
  }
}
